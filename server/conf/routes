# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET         /                           controllers.Application.index
OPTIONS     /*all                       controllers.Application.preflight(all)


POST        /api/v1/uploadImage         controllers.Application.uploadImage

POST        /api/v1/bindWeChat          controllers.WeChatController.bindWeChatAccount

POST        /api/v1/wechat/question     controllers.WeChatController.addQuestionForWeChat

GET         /api/v1/wechat/my/questions controllers.WeChatController.getUserQuestionsForWechat

POST        /api/v1/smsVerifyCode       controllers.Application.sendSMSVerifyCode

GET         /api/v1/captcha             controllers.Application.captcha

GET         /api/v1/user/uploadToken    controllers.Application.getUploadTokenForUser

GET         /api/v1/user/uploadTokenForAudio    controllers.Application.getAudioUploadTokenForUser

GET         /api/v1/admin/uploadToken   controllers.Application.getUploadTokenForAdmin

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file               controllers.Assets.at(path="/public", file)


# banckend api

#test

POST    /login                          controllers.SecurityController.login
POST    /logout                         controllers.SecurityController.logout

# authentication

# admin register
POST        /api/v1/admin/signup                    controllers.Application.signUpAdmin
# admin login
POST        /api/v1/admin/login                     controllers.Application.loginForAdmin
# admin logout
GET         /api/v1/admin/logout                    controllers.Application.logoutForAdmin
# islogin
GET         /api/v1/admin/isauthenticated           controllers.Application.isAuthenticatedForAdmin
# curAdmin
GET          /api/v1/curadmin                       controllers.Application.getCurAdmin

# category

# add category
POST        /api/v1/category                        controllers.CategoryController.addCategory()
# get category
GET         /api/v1/categories                      controllers.CategoryController.getCategories()
# delete category
DELETE      /api/v1/category/:id                    controllers.CategoryController.deleteCategory(id: Long)
# update category
PUT         /api/v1/category/:id                    controllers.CategoryController.updateCategory(id: Long)

# article

# get all articles
GET         /api/v1/articles                        controllers.ArticleController.getArticles()
# get article by category
GET         /api/v1/articles/search                 controllers.ArticleController.searchArticles

GET         /api/v1/articles/:cateId                controllers.ArticleController.getArticlesByCategory(cateId: Long)
# post article
POST        /api/v1/article                         controllers.ArticleController.addArticle
# view article
GET         /api/v1/article/:id                     controllers.ArticleController.getArticle(id: Long)
# update article
PUT         /api/v1/article/:id                     controllers.ArticleController.updateArticle(id: Long)
# delete article
DELETE      /api/v1/article/:id                     controllers.ArticleController.deleteArticle(id: Long)
# push article
POST        /api/v1/article/push/:id                controllers.ArticleController.pushArticle(id: Long)
# get article comments
GET         /api/v1/article/:id/comments            controllers.ArticleController.getComments(id: Long)
# post comment
POST        /api/v1/article/:id/comments            controllers.ArticleController.addComment(id: Long)
# get article recommend
GET         /api/v1/article/:id/recommends          controllers.ArticleController.getRecommends(id: Long)

# comment

# get all comments
GET         /api/v1/comments                        controllers.CommentController.getAllComments()

GET         /api/v1/new/comments                    controllers.CommentController.getAllNewComments()
# delete comment
DELETE      /api/v1/comment/:id                     controllers.CommentController.deleteComment(id: Long)

PUT         /api/v1/comment/:id/auditpass           controllers.CommentController.auditCommentWithAudited(id: Long)

PUT         /api/v1/comment/:id/auditfail           controllers.CommentController.auditCommentWithFailed(id: Long)

# user manage

# get all users
GET         /api/v1/users                           controllers.UserController.getAllUsers
# get users by type
GET         /api/v1/users/:userType                 controllers.UserController.getUsersByType(userType: String)
# view user details
GET         /api/v1/user/:id                        controllers.UserController.getUser(id: Long)
# update user
PUT         /api/v1/user/:id                        controllers.UserController.updateUser(id: Long)
# update password
PUT         /api/v1/my/password                     controllers.UserController.updateUserPassword
# set password for admin
PUT         /api/v1/foradmin/user/password          controllers.UserController.updateUserPasswordForAdmin
# delete user
DELETE      /api/v1/user/:id                        controllers.UserController.deleteUser(id: Long)

# get all admins
GET         /api/v1/admins                          controllers.AdminController.getAllAdmins
# view admin details
GET         /api/v1/admin/:id                       controllers.AdminController.getAdmin(id: Long)
# update admin
PUT         /api/v1/admin/:id                       controllers.AdminController.updateAdmin(id: Long)
# update password
PUT         /api/v1/curadmin/password               controllers.AdminController.updateAdminPassword()
# delete admin
DELETE      /api/v1/admin/:id                       controllers.AdminController.deleteAdmin(id: Long)



# client api

# authentication

# user register first
POST         /api/v1/signup/one         controllers.Application.signUpOneStep
# user register second
POST         /api/v1/signup/two         controllers.Application.signUpTwoStep
# user login
POST         /api/v1/login              controllers.Application.login
# user logout
GET          /api/v1/logout             controllers.Application.logout
# find password
POST          /api/v1/findPassword      controllers.Application.findPassword
# islogin
GET          /api/v1/isauthenticated    controllers.Application.isAuthenticated
# curinfo
GET          /api/v1/curuser            controllers.Application.getCurUser

# video

# add video
POST        /api/v1/video                   controllers.VideoController.addVideo
# get videoById
GET         /api/v1/video/:id               controllers.VideoController.getVideoById(id: Long)
# get  all video
GET         /api/v1/videos                  controllers.VideoController.getVideos
# update video
PUT         /api/v1/video/:id               controllers.VideoController.updateVideo(id: Long)
# delete video
DELETE      /api/v1/video/:id               controllers.VideoController.deleteVideo(id: Long)

# question
GET         /api/v1/questions                       controllers.QuestionController.getQuestions

GET         /api/v1/new/questions                   controllers.QuestionController.getNewQuestions

GET         /api/v1/questions/search                 controllers.QuestionController.searchQuestions

# questions for admin
GET         /api/v1/foradmin/questions              controllers.QuestionController.getQuestionsForAdmin
# post question
POST        /api/v1/question                        controllers.QuestionController.addQuestion
# view question
GET         /api/v1/question/:id                    controllers.QuestionController.getQuesion(id: Long)
# answer
#GET         /api/v1/question/:id/answer             controllers.QuestionController.getAnswer(id: Long)
# update question
PUT         /api/v1/question/:id                    controllers.QuestionController.updateQuestion(id: Long)
# auditQuestionWithAudited
PUT         /api/v1/question/:id/auditpass          controllers.QuestionController.auditQuestionWithAudited(id: Long)

PUT         /api/v1/question/:id/auditfail          controllers.QuestionController.auditQuestionWithAuditFailed(id: Long)

PUT         /api/v1/question/:id/assign/:expertId   controllers.QuestionController.assignQuestion(id: Long , expertId: Long)
# delete question
DELETE      /api/v1/question/:id                    controllers.QuestionController.deleteQuestion(id: Long)
# get User's question
GET         /api/v1/my/questions                    controllers.QuestionController.getUserQuestions
# add a answer
POST        /api/v1/question/answer                 controllers.QuestionController.addAnswer
# fav question
PUT         /api/v1/question/:id/fav                controllers.QuestionController.favQuestion(id: Long)
# unFav question
PUT         /api/v1/question/:id/unFav              controllers.QuestionController.unFavQuestion(id: Long)

GET         /api/v1/user/favorite/questions         controllers.QuestionController.getUserFavoriteQuestions

# trade
GET         /api/v1/trades                          controllers.TradeController.getTrades

GET         /api/v1/new/trades                      controllers.TradeController.getNewTrades
# trades for admin
GET         /api/v1/foradmin/trades                 controllers.TradeController.getTradesForAdmin
# post trade
POST        /api/v1/trade                           controllers.TradeController.addTrade
# view trade
GET         /api/v1/trade/:id                       controllers.TradeController.getTrade(id: Long)
# update trade
PUT         /api/v1/trade/:id                       controllers.TradeController.updateTrade(id: Long)
# auditTradeWithAudited
PUT         /api/v1/trade/:id/auditpass             controllers.TradeController.auditTradeWithAudited(id: Long)

PUT         /api/v1/trade/:id/auditfail             controllers.TradeController.auditTradeWithAuditFailed(id: Long)
# delete trade
DELETE      /api/v1/trade/:id                       controllers.TradeController.deleteTrade(id: Long)
# get User's trades
GET         /api/v1/my/trades                       controllers.TradeController.getUserTrades
# fav trade
PUT         /api/v1/trade/:id/fav                   controllers.TradeController.favTrade(id: Long)
# unFav trade
PUT         /api/v1/trade/:id/unFav                 controllers.TradeController.unFavTrade(id: Long)
# get fav trades
GET         /api/v1/user/favorite/trades            controllers.TradeController.getUserFavoriteTrades


# expert
GET         /api/v1/expert/:id/album                controllers.ExpertInfoController.getAlbumes(id: Long)
# upload image
POST        /api/v1/expert/album                    controllers.ExpertInfoController.uploadImage
# get trends
GET         /api/v1/expert/:id/trend                controllers.ExpertInfoController.getTrends(id: Long)
# post trend
POST        /api/v1/expert/trend                    controllers.ExpertInfoController.addTrend
# get expert's question
GET         /api/v1/expert/:id/questions            controllers.QuestionController.getQuestionsByExpert(id: Long)
# get expert's articles
GET         /api/v1/expert/:id/articles             controllers.ArticleController.getArticlesByExpert(id: Long)

GET         /api/v1/expert/:id/results              controllers.ArticleController.getResultArticlesByExpert(id: Long)
# add article for expert
POST        /api/v1/expert/article                  controllers.ArticleController.addArticleForExpert
# get expert infomation
GET         /api/v1/expert/:id                      controllers.ExpertInfoController.getExpertInformation(id: Long)
# expert profile
PUT         /api/v1/expert                          controllers.ExpertController.updateExpertForExpert
# edit user profile for admin
PUT         /api/v1/foradmin/expert/:id             controllers.ExpertController.updateExpertForAdmin(id: Long)
#expert getexperts
GET         /api/v1/experts                         controllers.ExpertController.getExperts

#expert getexperts for admin
GET         /api/v1/foradmin/experts                 controllers.ExpertController.getExpertsForAdmin
# add expert
POST        /api/v1/user/:id/experts                controllers.ExpertController.addExpert(id: Long)

# add adv
POST        /api/v1/advertisement                   controllers.AdvController.addAdv
# get advById
GET         /api/v1/advertisement/:id               controllers.AdvController.getAdvById(id: Long)
# get  all adv
GET         /api/v1/advertisements                  controllers.AdvController.getAdvs
# update adv
PUT         /api/v1/advertisement/:id               controllers.AdvController.updateAdv(id: Long)
# delete adv
DELETE      /api/v1/advertisement/:id               controllers.AdvController.deleteAdv(id: Long)

# add link
POST        /api/v1/link                            controllers.LinkController.addLink
# get advById
GET         /api/v1/link/:id                        controllers.LinkController.getLinkById(id: Long)
# get  all adv
GET         /api/v1/links                           controllers.LinkController.getAlllinks
# update adv
PUT         /api/v1/link/:id                        controllers.LinkController.updateLinkById(id: Long)
# delete adv
DELETE      /api/v1/link/:id                        controllers.LinkController.deleteLink(id: Long)

# messages
GET         /api/v1/messages                        controllers.MessageController.getMessages
# get all messages for admin
GET         /api/v1/foradmin/messages               controllers.MessageController.getMessagesForAdmin

GET         /api/v1/messages/unReadcount            controllers.MessageController.getUnReadMessageCount

PUT         /api/v1/message/:id                     controllers.MessageController.readMarkMessage(id: Long)

# app
GET         /api/v1/app/logs                        controllers.AppUpdateController.getAppUpdateLogs

GET         /api/v1/app/latest                      controllers.AppUpdateController.getLatestVersionForAndroid

GET         /api/v1/app/checkUpdate                 controllers.AppUpdateController.getLatestVersionForAndroid2

POST        /api/v1/app/logs                        controllers.AppUpdateController.addNewVersionApp